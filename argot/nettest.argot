/*
 * Copyright 2003-2007 (c) Live Media Pty Ltd. <argot@einet.com.au> 
 *
 * This software is licensed under the Argot Public License 
 * which may be found in the file LICENSE distributed 
 * with this software.
 *
 * More information about this license can be found at
 * http://www.einet.com.au/License
 * 
 * The Developer of this software is Live Media Pty Ltd,
 * PO Box 4591, Melbourne 3001, Australia.  The license is subject 
 * to the law of Victoria, Australia, and subject to exclusive 
 * jurisdiction of the Victorian courts.
 */

!load "networkvm.dictionary";
!load "channel.dictionary";

!import remote.location;
!import remote.exception;
!import remote.exception.basic;
!import remote.stack_trace_element;

!import uint16;
!import u8ascii;
!import empty;
!import uint8;
!import uint32;
!import int32;

!import channel.id;
!import channel.input;
!import channel.output;
!import channel.pipe;


(dictionary.source [

(meta.structure meta.name:"testvalue"
	(meta.sequence [
		(meta.tag u8ascii:"x" (meta.reference #uint8))
		(meta.tag u8ascii:"str" (meta.reference #u8ascii))
	])
)

(meta.structure meta.name:"test_exception" (meta.sequence [
	(meta.reference #remote.exception.basic)
]))

(meta.abstract.map #remote.exception #test_exception)

(meta.structure meta.name:"test" (remote.interface))

(meta.structure meta.name:"test.doSomething"
	(remote.method #test u8ascii:"doSomething"
		[ (remote.parameter #int32 u8ascii:"param" ) ]
		[ (remote.parameter #int32 u8ascii:"ret" ) ]
		[ #int32 ]
	)
)

/* public int methodWithException( int x ) throws RemoteException; */

(meta.structure meta.name:"test.methodWithException"
	(remote.method #test u8ascii:"methodWithException"
		[ (remote.parameter #int32 u8ascii:"x") ]
		[ (remote.parameter #int32 u8ascii:"ret") ]
		[ #remote.exception ]
	)
)
	
/* public void methodUndeclaredException(); */

(meta.structure meta.name:"test.methodUndeclaredException"
	(remote.method #test u8ascii:"methodUndeclaredException"
		[  ]
		[  ]
		[  ]
	)
)

/* public void methodCustomException() throws TestException; */

(meta.structure meta.name:"test.methodCustomException"
	(remote.method #test u8ascii:"methodCustomException"
		[  ]
		[  ]
		[ #test_exception ]
	)
)

/* public void methodNoReturn( int x ); */

(meta.structure meta.name:"test.methodNoReturn" 
	(remote.method #test u8ascii:"methodNoReturn" 
		[ (remote.parameter #int32 u8ascii:"x") ]
		[ ]
		[ ]
	)
)
	
/* public void methodNoParam(); */

(meta.structure meta.name:"test.methodNoParam"
	(remote.method #test u8ascii:"methodNoParam"
		[] [] []
	)
)

	
/* public void methodComplexParam( TestValue value ); */

(meta.structure meta.name:"test.methodComplexParam"
	(remote.method #test u8ascii:"methodComplexParam"
		[ (remote.parameter #testvalue u8ascii:"x" ) ]
		[ ]
		[ ]
	)
)
	
/* public TestValue methodComplexReturn( int x ); */

(meta.structure meta.name:"test.methodComplexReturn"
	(remote.method #test u8ascii:"methodComplexReturn"
		[ (remote.parameter #int32 u8ascii:"x" ) ]
		[ (remote.parameter #testvalue u8ascii:"ret" ) ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel" (remote.interface))

(meta.structure meta.name:"test.channel.sendInputStream"
	(remote.method #test.channel u8ascii:"sendInputStream"
		[ (remote.parameter #channel.input u8ascii:"input") ]
		[ (remote.parameter #u8ascii u8ascii:"result") ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel.receiveInputStream"
	(remote.method #test.channel u8ascii:"receiveInputStream"
		[ (remote.parameter #u8ascii u8ascii:"input") ]
		[ (remote.parameter #channel.input u8ascii:"result") ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel.sendOutputStream"
	(remote.method #test.channel u8ascii:"sendOutputStream"
		[ (remote.parameter #channel.output u8ascii:"output")
		  (remote.parameter #u8ascii u8ascii:"input") ]
		[ ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel.receiveOutputStream"
	(remote.method #test.channel u8ascii:"receiveOutputStream"
		[ ]
		[ (remote.parameter #channel.output u8ascii:"output") ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel.sendEndPoint"
	(remote.method #test.channel u8ascii:"sendEndPoint"
		[ (remote.parameter #channel.pipe u8ascii:"endpoint") ]
		[ ]
		[ ]
	)
)

(meta.structure meta.name:"test.channel.receiveEndPoint"
	(remote.method #test.channel u8ascii:"receiveEndPoint"
		[ ]
		[ (remote.parameter #channel.pipe u8ascii:"endpoint") ]
		[ ]
	)
)


])