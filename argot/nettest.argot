/*
 * Copyright 2003-2007 (c) Live Media Pty Ltd. <argot@einet.com.au> 
 *
 * This software is licensed under the Argot Public License 
 * which may be found in the file LICENSE distributed 
 * with this software.
 *
 * More information about this license can be found at
 * http://www.einet.com.au/License
 * 
 * The Developer of this software is Live Media Pty Ltd,
 * PO Box 4591, Melbourne 3001, Australia.  The license is subject 
 * to the law of Victoria, Australia, and subject to exclusive 
 * jurisdiction of the Victorian courts.
 */

!load "networkvm.dictionary";
!load "channel.dictionary";

!import remote.location;
!import remote.exception;
!import remote.exception.basic;
!import remote.stack_trace_element;

!import uint16;
!import u8ascii;
!import empty;
!import uint8;
!import uint32;
!import int32;

!import channel.id;
!import channel.input;
!import channel.output;
!import channel.pipe;


(library.list [

(library.entry 
	(library.definition u8ascii:"testvalue" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"x" (meta.reference #uint8))
		(meta.tag u8ascii:"str" (meta.reference #u8ascii))
	])
)

(library.entry 
	(library.definition u8ascii:"test_exception" u8ascii:"1.3")
	(meta.sequence [
		(meta.reference #remote.exception.basic)
	]))

(library.entry 
	(library.relation #remote.exception u8ascii:"1.3" u8ascii:"test_exception")
	(meta.abstract_map #test_exception))

(library.entry 
	(library.definition u8ascii:"test" u8ascii:"1.3")
	(remote.interface))

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"doSomething")
	(remote.method u8ascii:"doSomething"
		[ (remote.parameter #int32 u8ascii:"param" ) ]
		[ (remote.parameter #int32 u8ascii:"ret" ) ]
		[ #int32 ]
	)
)

/* public int methodWithException( int x ) throws RemoteException; */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodWithException")
	(remote.method u8ascii:"methodWithException"
		[ (remote.parameter #int32 u8ascii:"x") ]
		[ (remote.parameter #int32 u8ascii:"ret") ]
		[ #remote.exception ]
	)
)
	
/* public void methodUndeclaredException(); */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodUndeclaredException")
	(remote.method u8ascii:"methodUndeclaredException"
		[  ]
		[  ]
		[  ]
	)
)

/* public void methodCustomException() throws TestException; */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodCustomException")
	(remote.method u8ascii:"methodCustomException"
		[  ]
		[  ]
		[ #test_exception ]
	)
)

/* public void methodNoReturn( int x ); */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodNoReturn")
	(remote.method u8ascii:"methodNoReturn" 
		[ (remote.parameter #int32 u8ascii:"x") ]
		[ ]
		[ ]
	)
)
	
/* public void methodNoParam(); */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodNoParam")
	(remote.method u8ascii:"methodNoParam"
		[] [] []
	)
)

	
/* public void methodComplexParam( TestValue value ); */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodComplexParam")
	(remote.method u8ascii:"methodComplexParam"
		[ (remote.parameter #testvalue u8ascii:"x" ) ]
		[ ]
		[ ]
	)
)
	
/* public TestValue methodComplexReturn( int x ); */

(library.entry 
	(library.relation #test u8ascii:"1.3" u8ascii:"methodComplexReturn")
	(remote.method u8ascii:"methodComplexReturn"
		[ (remote.parameter #int32 u8ascii:"x" ) ]
		[ (remote.parameter #testvalue u8ascii:"ret" ) ]
		[ ]
	)
)

(library.entry 
	(library.definition u8ascii:"test.channel" u8ascii:"1.3")
	(remote.interface))

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"sendInputStream")
	(remote.method u8ascii:"sendInputStream"
		[ (remote.parameter #channel.input u8ascii:"input") ]
		[ (remote.parameter #u8ascii u8ascii:"result") ]
		[ ]
	)
)

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"receiveInputStream")
	(remote.method u8ascii:"receiveInputStream"
		[ (remote.parameter #u8ascii u8ascii:"input") ]
		[ (remote.parameter #channel.input u8ascii:"result") ]
		[ ]
	)
)

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"sendOutputStream")
	(remote.method u8ascii:"sendOutputStream"
		[ (remote.parameter #channel.output u8ascii:"output")
		  (remote.parameter #u8ascii u8ascii:"input") ]
		[ ]
		[ ]
	)
)

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"receiveOutputStream")
	(remote.method u8ascii:"receiveOutputStream"
		[ ]
		[ (remote.parameter #channel.output u8ascii:"output") ]
		[ ]
	)
)

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"sendEndPoint")
	(remote.method u8ascii:"sendEndPoint"
		[ (remote.parameter #channel.pipe u8ascii:"endpoint") ]
		[ ]
		[ ]
	)
)

(library.entry 
	(library.relation #test.channel u8ascii:"1.3" u8ascii:"receiveEndPoint")
	(remote.method u8ascii:"receiveEndPoint"
		[ ]
		[ (remote.parameter #channel.pipe u8ascii:"endpoint") ]
		[ ]
	)
)


])