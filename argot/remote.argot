/*
 * Copyright 2003-2005 (c) Live Media Pty Ltd. <argot@einet.com.au> 
 *
 * This software is licensed under the Argot Public License 
 * which may be found in the file LICENSE distributed 
 * with this software.
 *
 * More information about this license can be found at
 * http://www.einet.com.au/License
 * 
 * The Developer of this software is Live Media Pty Ltd,
 * PO Box 4591, Melbourne 3001, Australia.  The license is subject 
 * to the law of Victoria, Australia, and subject to exclusive 
 * jurisdiction of the Victorian courts.
 */

!import empty;
!import uint8;
!import uint16;
!import int32;
!import u8ascii;
!import meta.definition;

(library.list [

/* Remote Interfaces and Object definitions */

(library.entry 
	(library.definition u8ascii:"remote.parameter" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"type" (meta.reference #uint16))
		(meta.tag u8ascii:"name" (meta.reference #u8ascii))
	]))

(library.entry 
	(library.definition u8ascii:"remote.method" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"name" (meta.reference #u8ascii))
		(meta.tag u8ascii:"request"
			(meta.array (meta.reference #uint8) (meta.reference #remote.parameter)))
		(meta.tag u8ascii:"response"
			(meta.array (meta.reference #uint8) (meta.reference #remote.parameter)))
		(meta.tag u8ascii:"error"
			(meta.array (meta.reference #uint8) (meta.reference #uint16)))
	]))

(library.entry 
	(library.definition u8ascii:"remote.interface" u8ascii:"1.3")
	(meta.sequence [
		(meta.array 
			(meta.reference #uint8)
			(meta.reference #uint16)  /* meta.id */
		)
	])
)

(library.entry 
	(library.relation #meta.definition u8ascii:"1.3" u8ascii:"remote.interface")
	(meta.abstract.map #remote.interface))
	
(library.entry 
	(library.relation #meta.definition u8ascii:"1.3" u8ascii:"remote.method")
	(meta.abstract.map #remote.method))

(library.entry 
	(library.definition u8ascii:"remote.location" u8ascii:"1.3")
	(meta.abstract []))

(library.entry 
	(library.definition u8ascii:"remote.object" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"location" (meta.reference #remote.location))
		(meta.tag u8ascii:"class" (meta.reference #uint16))
	]))

(library.entry 
	(library.definition u8ascii:"remote.exception" u8ascii:"1.3")
	(meta.abstract [
		(meta.abstract.map #empty)  /* allow exceptions to be null */
	]))


(library.entry 
	(library.definition u8ascii:"remote.stack_trace_element" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"className" (meta.reference #u8ascii))
		(meta.tag u8ascii:"methodName" (meta.reference #u8ascii))
		(meta.tag u8ascii:"fileName" (meta.reference #u8ascii))
		(meta.tag u8ascii:"lineNumber" (meta.reference #int32))
	])) 

/* Most exceptions will have the following */

(library.entry 
	(library.definition u8ascii:"remote.exception.basic" u8ascii:"1.3")
	(meta.sequence [
		(meta.tag u8ascii:"reason" (meta.reference #u8ascii))
		(meta.tag u8ascii:"cause" (meta.reference #remote.exception))
		(meta.tag u8ascii:"stacktrace"
			(meta.array
				(meta.reference #uint16)
				(meta.reference #remote.stack_trace_element)
			)
		)
	])
)

/* This is the default wrapped exception */

(library.entry 
	(library.definition u8ascii:"remote.exception.wrapped" u8ascii:"1.3")
	(meta.sequence [
		(meta.reference #remote.exception.basic)
	])
)

(library.entry 
	(library.relation #remote.exception u8ascii:"1.3" u8ascii:"remote.exception.wrapped")
	(meta.abstract.map #remote.exception.wrapped))

])
 